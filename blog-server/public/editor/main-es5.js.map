{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/blog.service.ts","webpack:///src/app/edit/edit.component.ts","webpack:///src/app/edit/edit.component.html","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/my-date-pipe.pipe.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/post.ts","webpack:///src/app/preview/preview.component.ts","webpack:///src/app/preview/preview.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","children","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","blogService","title","window","localStorage","setItem","parseJWT","document","cookie","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BlogService","http","httpOptions","headers","responseType","draft","token","base64Url","split","base64","replace","JSON","parse","atob","username","url","promise","reject","get","toPromise","res","err","message","postid","post","put","postList","nextPostid","push","i","length","splice","fetchPosts","getItem","unsaved","isNewPost","console","log","providedIn","EditComponent","route","router","paramMap","subscribe","parseInt","snapshot","getPost","newTitle","newBody","body","getCurrentDraft","navigate","newPost","modified","Date","getTime","setCurrentDraft","updatePost","deletePost","deleteLocalPost","onChangeTitle","onChangeBody","previewPost","savePost","ListComponent","updateLocalPosts","getLocalPosts","posts","queryParams","params","currentUtc","p","getNextPostId","addLocalPost","incrementNextPostId","onNewPost","MyDatePipePipe","utc","date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","zeroMinutes","zeroSeconds","meridium","ret","name","PageNotFoundComponent","Post","created","PreviewComponent","getCurrentDraftObservable","parser","htmlRenderer","preview","markdownTitle","render","markdownBody","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EditComponent } from './edit/edit.component';\nimport { PreviewComponent } from './preview/preview.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './list/list.component';\n\n\nconst routes: Routes = [\n  { \n    path: '', \n    children: [\n      { path: 'edit/:id', component: EditComponent },\n      { path: 'preview/:id', component: PreviewComponent },\n      { path: 'notFound', component: PageNotFoundComponent },\n    ]\n  },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, {useHash: true}) ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BlogService } from './blog.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'angular-blog';\n  \n  constructor(public blogService: BlogService) {\n    \n  }\n\n  ngOnInit(): void\n  {\n    window.localStorage.setItem('username', this.blogService.parseJWT(document.cookie)[\"usr\"]);\n  }\n}\n","<app-list \n    id=\"list-component\">\n</app-list>\n<router-outlet>\n</router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ListComponent } from './list/list.component';\nimport { EditComponent } from './edit/edit.component';\nimport { PreviewComponent } from './preview/preview.component';\nimport { MyDatePipePipe } from './my-date-pipe.pipe';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    EditComponent,\n    PreviewComponent,\n    MyDatePipePipe,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Post } from './post';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n\nexport class BlogService {\n\thttpOptions = {\n\t\theaders: new HttpHeaders({ 'Content-Type': 'application/json' }),\n\t\tresponseType: 'text' as 'json'\n\t};\n\tdraft: Post;\n\tpostList: Post[];\n\tnextPostid: number;\n\n\tconstructor(public http: HttpClient) { \n\t\tthis.draft = null;\n\t}\n\n\tparseJWT(token: string) \n\t{\n\t\tlet base64Url = token.split('.')[1];\n\t\tlet base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n\t\treturn JSON.parse(atob(base64));\n\t}\n\n\tfetchPosts(username: string): Promise<Post[]>\n\t{\n\t\tconst url = `/api/${username}`;\n\t\tlet promise = new Promise<Post[]>((resolve, reject) =>\n\t\t{\n\t\t\tthis.http.get<Post[]>(url)\n\t\t\t\t.toPromise()\n\t\t\t\t.then(res => \n\t\t\t\t{\n\t\t\t\t\tresolve(res);\n\t\t\t\t})\n\t\t\t\t.catch(err => \n\t\t\t\t{\n\t\t\t\t\treject(err.message);\n\t\t\t\t});\n\t\t});\n\t\treturn promise;\n\t}\n\n\tgetPost(username: string, postid: number): Promise<Post>\n\t{\n\t\tconst url = `/api/${username}/${postid}`;\n\t\treturn new Promise<Post>((resolve, reject) => {\n\t\t\tthis.http\n\t\t\t\t.get<Post>(url)\n\t\t\t\t.toPromise()\n\t\t\t\t.then(res => {\n\t\t\t\t\tresolve(res);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\treject(err.message);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tnewPost(username: string, post: Post): Promise<void>\n\t{\n\t\tconst url = `/api/${username}/${post.postid}`;\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tthis.http\n\t\t\t\t.post<void>(url, post, this.httpOptions)\n\t\t\t\t.toPromise()\n\t\t\t\t.then(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\treject(err.message);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tupdatePost(username: string, post: Post): Promise<void> \n\t{\n\t\tconst url = `/api/${username}/${post.postid}`;\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tthis.http\n\t\t\t\t.put<void>(url, post, this.httpOptions)\n\t\t\t\t.toPromise()\n\t\t\t\t.then((res) => {\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\treject(err.message);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tdeletePost(username: string, postid: number): Promise<void> \n\t{\n\t\tconst url = `/pi/${username}/${postid}`;\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tthis.http\n\t\t\t\t.delete<void>(url, this.httpOptions)\n\t\t\t\t.toPromise()\n\t\t\t\t.then(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\treject(err.message);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tsetCurrentDraft(post: Post): void {\n\t\tthis.draft = post;\n\t}\n\n\tgetCurrentDraft(): Post {\n\t\treturn this.draft;\n\t}\n\n\t// local API\n\tgetLocalPosts(): Observable<Post[]>\n\t{\n\t\treturn of(this.postList);\n\t}\n\n\tgetCurrentDraftObservable(): Observable<Post>\n\t{\n\t\treturn of(this.draft);\n\t}\n\n\tgetNextPostId(): number\n\t{\n\t\treturn this.nextPostid;\n\t}\n\n\tincrementNextPostId(): void\n\t{\n\t\tthis.nextPostid++;\n\t}\n\n\taddLocalPost(post: Post): void\n\t{\n\t\tthis.postList.push(post);\n\t}\n\n\tdeleteLocalPost(postid: number): void\n\t{\n\t\tfor(let i = 0; i < this.postList.length; i++)\n\t\t{\n\t\t\tif(this.postList[i].postid == postid)\n\t\t\t{\n\t\t\t\tthis.postList.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateLocalPosts(): Promise<void>\n\t{\n\t\treturn this.fetchPosts(localStorage.getItem('username'))\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tthis.nextPostid = res[res.length - 1].postid + 1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(let i = 0; i < res.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tres[i].unsaved = false;\n\t\t\t\t\t\t\tres[i].isNewPost = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.postList = res;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t});\n\t\t\t\t};\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Post } from '../post';\nimport { BlogService } from '../blog.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {;\n  post: Post;\n\n  constructor(\n    public blogService: BlogService, \n    private route: ActivatedRoute, \n    private router: Router) \n  { \n  }\n\n  ngOnInit(): void \n  {\n    this.route.paramMap.subscribe(() => {\n      let postid = parseInt(this.route.snapshot.paramMap.get('id'));\n      this.getPost(postid);\n    });\n  }\n\n  ngOnChanges(): void\n  {\n    \n  }\n\n  onChangeTitle(newTitle: string): void\n  {\n    if(!this.post.unsaved)\n    {\n      this.post.unsaved = true;\n    }\n    this.post.title = newTitle;\n  }\n\n  onChangeBody(newBody: string): void\n  {\n    if(!this.post.unsaved)\n    {\n      this.post.unsaved = true;\n    }\n    this.post.body = newBody;\n  }\n\n  getPost(postid: number): void\n  {\n    if(this.blogService.getCurrentDraft() === null)\n    {\n      this.blogService\n        .getPost(localStorage.getItem('username'), postid)\n        .then(res => {\n          this.post = res;\n          this.post.unsaved = false;\n        })\n        .catch(err => {\n          console.log(err);\n          this.router.navigate(['notFound']);\n        });\n    }\n    else\n    {\n      this.post = this.blogService.getCurrentDraft();\n    }\n\n  }\n\n  savePost(): void\n  {\n    if(this.post.isNewPost)\n    {\n      delete this.post.isNewPost;\n      delete this.post.unsaved;\n      console.log(this.post);\n      this.blogService\n        .newPost(localStorage.getItem('username'), this.post)\n        .then(() => {\n          this.post.isNewPost = false;\n          this.post.unsaved = false;\n          this.post.modified = new Date().getTime();\n          this.blogService.setCurrentDraft(this.post);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n    else\n    {\n      delete this.post.isNewPost;\n      delete this.post.unsaved;\n      this.blogService\n        .updatePost(localStorage.getItem('username'), this.post)\n        .then(() => {\n          this.post.isNewPost = false;\n          this.post.unsaved = false;\n          this.post.modified = new Date().getTime();\n          this.blogService.setCurrentDraft(this.post);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }\n\n  deletePost(): void\n  {\n    this.blogService.setCurrentDraft(null);\n    if(!this.post.unsaved)\n    {\n      this.blogService\n        .deletePost(localStorage.getItem('username'), this.post.postid)\n        .catch(err => {\n          console.log(err);\n        });\n    }\n    \n    this.blogService.deleteLocalPost(this.post.postid);\n    this.router.navigate(['/'])\n  }\n\n  previewPost(): void\n  {\n    this.router.navigate(['preview', this.post.postid])\n  }\n}\n","<div>\n    <div style=\"text-align: left; margin-bottom: 20px;\">\n        <label>Title</label>\n        <div>\n            <input \n                type=\"text\" \n                placeholder=\"Write the title of your post here...\" \n                [ngModel]=\"this.post?.title\"\n                (ngModelChange)=\"onChangeTitle($event)\"/>\n        </div>\n    </div>\n    <div style=\"text-align: left;\">\n        <label>Body</label>\n        <div>\n            <textarea \n                placeholder=\"Write the body of your post here...\"\n                [ngModel]=\"this.post?.body\"\n                (ngModelChange)=\"onChangeBody($event)\">\n            </textarea>\n        </div>\n    </div>\n    <div>\n        Last Modified: {{ this.post?.modified | myDatePipe }} \n    </div>\n    <div id=\"buttons\">          \n        <button \n            (click)=\"previewPost()\">\n            Preview\n        </button>\n        <button \n            [disabled]=\"!this.post?.unsaved\" \n            [class.disabledBtn]=\"!this.post?.unsaved\"\n            (click)=\"savePost()\">\n            Save\n        </button> \n        <button \n            (click)=\"deletePost()\">\n            Delete\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Post } from '../post';\nimport { BlogService } from '../blog.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  posts: Post[];\n\n  constructor(public blogService: BlogService, private route: ActivatedRoute, private router: Router) \n  {\n  }\n\n  ngOnInit(): void \n  {\n    this.blogService.updateLocalPosts()\n      .then(() => {\n        this.blogService\n          .getLocalPosts()\n          .subscribe(res => {\n            this.posts = res;\n          });\n      });\n    \n    this.route.queryParams.subscribe(params => {\n      // todo - https://angular.io/guide/router - for all components \n    });\n  }\n\n\n  onSelect(post: Post)\n  {\n    this.blogService.setCurrentDraft(post);\n    this.router.navigate(['edit', post.postid]); \n  }\n\n  onNewPost()\n  {\n    let currentUtc = new Date().getTime();\n    let p = new Post(this.blogService.getNextPostId(), currentUtc, currentUtc, \"\", \"\", true, true);\n    //console.log(this.blogService.getNextPostId());\n    this.blogService.addLocalPost(p);\n    this.blogService.setCurrentDraft(p);\n    this.blogService.incrementNextPostId();\n    this.router.navigate(['edit', p.postid]);\n  }\n\n\n  onDeletePost(post: Post)\n  {\n    this.blogService.setCurrentDraft(null);\n    this.blogService.deleteLocalPost(post.postid);\n  }\n}\n","<div id=\"post-list\" class=\"component\">\n    <button (click)=\"onNewPost()\">New Post</button>\n    <ul class=\"list\">\n        <li *ngFor=\"let p of this.posts\"\n            [class.selected]=\"p === this.blogService.getCurrentDraft()\"\n            (click)=\"onSelect(p)\">\n            <span class=\"badge\">{{ p.modified | myDatePipe }}</span> {{ p.title }}\n        </li>\n    </ul>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'myDatePipe'\n})\nexport class MyDatePipePipe implements PipeTransform {\n\n  transform(utc: string): string \n  {\n    let date = new Date(utc);\n\tlet day = date.getDate();\n\tlet month = date.getMonth() + 1;\n\tlet year = date.getFullYear();\n\tlet hour = date.getHours();\n\tlet minutes = date.getMinutes();\n\tlet seconds = date.getSeconds();\n\tlet zeroMinutes = \"\";\n\tlet zeroSeconds = \"\";\n\tif(minutes < 10)\n\t{\n\t\tzeroMinutes = \"0\";\n\t}\n\n\tif(seconds < 10)\n\t{\n\t\tzeroSeconds = \"0\";\n\t}\n\n\tlet meridium = \"AM\";\n\tif(hour >= 12)\n\t{\n\t\tif(hour > 12)\n\t\t\thour = hour % 12;\n\t\tmeridium = \"PM\";\n\t}\n\telse if(hour == 0)\n\t{\n\t\thour = 12;\n\t}\n    \n    let ret = `${month}/${day}/${year}, ${hour}:${zeroMinutes}${minutes}:${zeroSeconds}${seconds} ${meridium}`;\n\treturn ret;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Page not found</h2>","export class Post {\n  constructor(\n    postid: number, \n    created: number, \n    modified: number, \n    title: string, \n    body: string, \n    unsaved: boolean,\n    isNewPost: boolean)\n  {\n    this.postid = postid;\n    this.created = created;\n    this.modified = modified;\n    this.title = title;\n    this.body = body;\n    this.unsaved = unsaved;\n    this.isNewPost = isNewPost;\n  }\n  \n    postid: number;\n    created: number;\n    modified: number;\n    title: string;\n    body: string;\n    unsaved: boolean;\n    isNewPost: boolean;\n  }","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\nimport { BlogService } from '../blog.service';\nimport { Parser, HtmlRenderer } from 'commonmark';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  \tselector: 'app-preview',\n  \ttemplateUrl: './preview.component.html',\n  \tstyleUrls: ['./preview.component.css']\n})\nexport class PreviewComponent implements OnInit {\n\tpost: Post;\n\tmarkdownTitle: string;\n\tmarkdownBody: string;\n\tparser: Parser;\n\thtmlRenderer: HtmlRenderer;\n\n\t/** TODO\n\t*  Subscribe to the URL activation event\n\t*  so that the post to display can be obtained with BlogService \n\t*  and rendered as HTML when a “preview URL” is activated\n\t*/\n\n  \tconstructor(private blogService: BlogService, private route: ActivatedRoute, private router: Router) { }\n\n  \tngOnInit(): void {\n\t\tthis.blogService.getCurrentDraftObservable()\n\t\t\t.subscribe(res => {\n\t\t\t\tthis.post = res;\n\t\t\t});\n  \t\tthis.parser = new Parser();\n\t\tthis.htmlRenderer = new HtmlRenderer(); \n\t\tthis.preview();\n\t}\n\t  \n\tngOnChanges(): void\n\t{\n\t\tthis.preview();\n\t}\n\n  \tpreview(): void {\n  \t\tif (this.post == null) {\n\t\t\tconsole.log(\"---ERROR: previewing null post\");\n\t\t\tthis.router.navigate(['notFound']);\n  \t\t\treturn;\n\t\t}\n\n  \t\tthis.markdownTitle = this.htmlRenderer.render(this.parser.parse(this.post.title));\n  \t\tthis.markdownBody = this.htmlRenderer.render(this.parser.parse(this.post.body));\n\t}\n\t  \n\ttoEdit(): void {\n\t\tthis.router.navigate(['edit', this.post.postid]);\n\t}\n\n}\n","<div *ngIf=\"post\">\n\t<button (click)=\"toEdit()\">Edit</button>\n\t<h1 [innerHTML]=\"markdownTitle\"></h1>\n\t<p [innerHTML]=\"markdownBody\"></p>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}